apply plugin: 'java'
apply plugin: 'application'

sourceCompatibility = '1.7'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

// NetBeans will automatically add "run" and "debug" tasks relying on the
// "mainClass" property. You may however define the property prior executing
// tasks by passing a "-PmainClass=<QUALIFIED_CLASS_NAME>" argument.
//
// Note however, that you may define your own "run" and "debug" task if you
// prefer. In this case NetBeans will not add these tasks but you may rely on
// your own implementation.
if (!hasProperty('mainClass')) {
    ext.mainClass = 'Ic2ExpReactorPlanner.ReactorPlannerFrame'
}

mainClassName = ext.mainClass

sourceSets {
  main {
    java {
      srcDirs 'src'
    }
    resources {
      srcDir 'resources'
    }
  }

  test {
    java {
      srcDir 'test'
    }
    resources {
      srcDir 'testResources'
    }
  }
}

repositories {
    mavenCentral()
    // You may define additional repositories, or even remove "mavenCentral()".
    // Read more about repositories here:
    //   http://www.gradle.org/docs/current/userguide/dependency_management.html#sec:repositories
}

dependencies {
    // TODO: Add dependencies here ...
    // You can read more about how to add dependency here:
    //   http://www.gradle.org/docs/current/userguide/dependency_management.html#sec:how_to_declare_your_dependencies
    testCompile group: 'junit', name: 'junit', version: '4.10'
}

jar {
    from('src') {
        include 'assets/**/*.png'
        include 'Ic2ExpReactorPlanner/Bundle*.properties'
    }
    manifest {
        attributes 'Main-Class': 'Ic2ExpReactorPlanner.ReactorPlannerFrame'
    }
}

task processAssets(type: Copy) {
    from('src') {
        include 'assets/**/*.png'
        include 'Ic2ExpReactorPlanner/Bundle*.properties'
    }
    into 'build/classes/java/main'
}

run {
    run.dependsOn processAssets
}

task processSource(type: Copy) {
    from sourceSets.main.java
    inputs.property 'erpVersion', erpVersion
    filter { line -> line.replaceAll('@VERSION@', erpVersion) }
    into "$buildDir/src"
}

compileJava {
    source = processSource.outputs
}
